using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace miniproject
{
    class Enroll
    {
        private Student student { get; set; }
        private Course course { get; set; }
        private DateTime enrollmentDate { get; set; }
        public Enroll(Student student, Course course, DateTime enrollmentDate)
        {
            this.student = student;
            this.course = course;
            this.enrollmentDate = enrollmentDate;
        }
    }
    class AppEngine
    {
        public static SqlCommand cd;
        public static SqlCommand cd1;
        public static SqlCommand cd2;
        public static SqlCommand cd3;
        public static SqlCommand cd4;
        public static SqlCommand cd5;
        public static SqlCommand cd6;
        public static SqlCommand cd7;
        public static SqlCommand cd8;
        public static SqlCommand cd9;
        public static SqlDataReader dr;
        public static SqlConnection con;
        static SqlConnection getConnection()
        {

            con = new SqlConnection("data source=saikumar;initial catalog=course_managenment;integrated security=true");
            con.Open();
            return con;

        }


        public void Show_all_registered_Students()
        {

            con = getConnection();
            cd = new SqlCommand("Select *from student", con);
            int res = cd.ExecuteNonQuery();
            dr = cd.ExecuteReader();
            while (dr.Read())
            {
                Console.WriteLine("Student Details : ");
                Console.WriteLine("--------------------------");
                Console.WriteLine("Student Id : " + " " + dr[0]);
                Console.WriteLine("Student Name :" + " " + dr[1]);
                Console.WriteLine("Student DOB :" + " " + dr[2]);

            }
        }

        public void New_StudentRegistration()
        {

            int n;
            Console.WriteLine("Enter No. Of Student Details you need to insert............!");
            n = Convert.ToInt32(Console.ReadLine());
            for (int i = 0; i < n; i++)
            {
                con = getConnection();
                Console.WriteLine("Enter Student Details SId,StdName,Dob");
                int Id;
                string Name, DateOfBirth;
                Id = Convert.ToInt32(Console.ReadLine());
                Name = Console.ReadLine();
                DateOfBirth = Console.ReadLine();
                cd1 = new SqlCommand("insert into student values (@stdid,@stdname,@sdob)", con);
                cd1.Parameters.AddWithValue("@stdid", Id);
                cd1.Parameters.AddWithValue("@stdname", Name);
                cd1.Parameters.AddWithValue("@sdob", DateOfBirth);
                int res1 = cd1.ExecuteNonQuery();
                if (res1 > 0)
                {
                    Console.WriteLine("Student details inserted Sucessfully");
                }
                else
                    Console.WriteLine("Please enter valid Student details");
            }

        }
        public void Introducing_NewCourse()
        {

            con = getConnection();
            Console.WriteLine("Enter Course Details CourseId,CourseName,Duration,Fee_Structure");
            int CId, Fees;
            string CName, Duration;
            CId = Convert.ToInt32(Console.ReadLine());
            CName = Console.ReadLine();
            Duration = Console.ReadLine();
            Fees = Convert.ToInt32(Console.ReadLine());
            cd2 = new SqlCommand("insert into Course values (@cid,@Namee,@dur,@cfee)", con);
            cd2.Parameters.AddWithValue("@cid", CId);
            cd2.Parameters.AddWithValue("@Namee", CName);
            cd2.Parameters.AddWithValue("@dur", Duration);
            cd2.Parameters.AddWithValue("@cfee", Fees);
            int res2 = cd2.ExecuteNonQuery();
            if (res2 > 0)
            {
                Console.WriteLine("Course details inserted Sucessfully");
            }
            else
                Console.WriteLine("Please enter valid Course details");
        }
        public void Available_Courses()
        {

            con = getConnection();
            cd6 = new SqlCommand("Select *from course", con);
            int res6 = cd6.ExecuteNonQuery();
            Console.WriteLine("Courses Available In the Institution are................!");
            dr = cd6.ExecuteReader();
            while (dr.Read())
            {
                Console.WriteLine("Course Details : ");
                Console.WriteLine("--------------------------");
                Console.WriteLine("Course Id : " + " " + dr[0]);
                Console.WriteLine("Course Name :" + " " + dr[1]);
                Console.WriteLine("Course Duration :" + " " + dr[2]);
                Console.WriteLine("Course Fees :" + " " + dr[3]);


            }

        }


        public void enrolling_courses()
        {
            con = getConnection();
            int SId, CID;
            DateTime EnrollDate;
            Console.WriteLine("Enter Student Id");
            SId = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter Course Id");
            CID = Convert.ToInt32(Console.ReadLine());
            EnrollDate = DateTime.UtcNow;
            cd3 = new SqlCommand("insert into enroll values(@cid,@stdid,@enrolment)", con);
            cd3.Parameters.AddWithValue("@cid", CID);
            cd3.Parameters.AddWithValue("@stdid", SId);
            cd3.Parameters.AddWithValue("@enrolment", EnrollDate);
            int res3 = cd3.ExecuteNonQuery();
            if (res3 > 0)
            {
                Console.WriteLine("Student enrolled to the Course Sucessfully");
            }
            else
                Console.WriteLine("Please enter valid details");
        }

        public void enroll()
        {


            con = getConnection();
            int SId;
            Console.WriteLine("Enter Student Id");
            SId = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter Course Id");
            int CID = Convert.ToInt32(Console.ReadLine());
            DateTime EnrollDate = DateTime.UtcNow;
            cd4 = new SqlCommand("update enroll set EnrollDate = @enrolldate where cid=@cid", con);
            cd4.Parameters.AddWithValue("@stdid", SId);
            cd4.Parameters.AddWithValue("@cid", CID);
            cd4.Parameters.AddWithValue("@enrolment", EnrollDate);
            int res4 = cd4.ExecuteNonQuery();
            if (res4 > 0)
            {
                Console.WriteLine("Student enrolled to the Course Sucessfully");
            }
            else
                Console.WriteLine("Please enter valid Course Id");


        }
        public void Student_Screen()
        {
            try
            {

                con = getConnection();
                int SId;
                Console.WriteLine("Enter Student Id");
                SId = Convert.ToInt32(Console.ReadLine());
                cd5 = new SqlCommand("select * from student where stdid=@stdid", con);
                cd5.Parameters.AddWithValue("@stdid", SId);
                dr = cd5.ExecuteReader();
                while (dr.Read())
                {
                    Console.WriteLine("Student Details : ");
                    Console.WriteLine("--------------------------");
                    Console.WriteLine("Student Id : " + " " + dr[0]);
                    Console.WriteLine("Student Name :" + " " + dr[1]);
                    Console.WriteLine("Student DOB :" + " " + dr[2]);

                }
            }
            catch (Exception e)
            {
                Console.WriteLine("Students Doesn't Exist.....Start New Registration", e.Message);
            }

        }

        public void UpdateStudentData()
        {
            con = getConnection();
            Console.WriteLine("Enter Student ID:");
            int Id = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter Student Name:");
            string Name = Console.ReadLine();
            Console.WriteLine("Enter Student DOB:");
            string DateOfBirth = Console.ReadLine();
            cd7 = new SqlCommand("update student set stdname=@stdname,sdob=@sdob where stdid=@stdid", con);
            cd7.Parameters.AddWithValue("@stdid", Id);
            cd7.Parameters.AddWithValue("@stname", Name);
            cd7.Parameters.AddWithValue("@sdob", DateOfBirth);
            int res5 = cd7.ExecuteNonQuery();
            if (res5 > 0)
            {
                Console.WriteLine("Student details Updated Sucessfully");
            }
            else
                Console.WriteLine("please enter valid student details");
        }

        public void DeleteStudentData()
        {
            con = getConnection();
            Console.WriteLine("Enter Student ID:");
            int Id = Convert.ToInt32(Console.ReadLine());
            cd8 = new SqlCommand("delete student where stdid=@stdid", con);
            cd8.Parameters.AddWithValue("@stdid", Id);
            int res6 = cd8.ExecuteNonQuery();
            if (res6 > 0)
            {
                Console.WriteLine("Row Deleted Sucessfully");
            }
            else
                Console.WriteLine("please enter valid student details");
        }
        public void DeleteCourseData()
        {
            con = getConnection();
            int CId;
            Console.WriteLine("Enter Course id:");
            CId = Convert.ToInt32(Console.ReadLine());
            cd9 = new SqlCommand("delete course where cid=@cid", con);
            cd9.Parameters.AddWithValue("@cid", CId);
            int res7 = cd9.ExecuteNonQuery();
            if (res7 > 0)
            {
                Console.WriteLine("Row Deleted Sucessfully");
            }
            else
                Console.WriteLine("please enter valid Course details");
        }
        public void UpdateCourseData()
        {
            con = getConnection();
            int CId, Fees;
            string Duration;
            Console.WriteLine("Enter CID:");
            CId = Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Enter Course Duration:");
            Duration = Console.ReadLine();
            Console.WriteLine("Enter Course Fees:");
            Fees = Convert.ToInt32(Console.ReadLine());
            cd4 = new SqlCommand("update course set dur=@dur,cfee=@cfee where cid=@cid", con);
            cd4.Parameters.AddWithValue("@dur", Duration);
            cd4.Parameters.AddWithValue("@cfee", Fees);
            cd4.Parameters.AddWithValue("@cid", CId);
            int res4 = cd4.ExecuteNonQuery();
            if (res4 > 0)
            {
                Console.WriteLine("Course details Updated Sucessfully");
            }
            else
                Console.WriteLine("Please enter valid Course details");
        }
        public void Retrieve_Particular_Course()
        {
            try
            {

                con = getConnection();
                int CId;
                Console.WriteLine("Enter Course Id");
                CId = Convert.ToInt32(Console.ReadLine());
                cd = new SqlCommand("select *from course where cid=@cid", con);
                cd.Parameters.AddWithValue("@cid", CId);
                dr = cd.ExecuteReader();
                while (dr.Read())
                {
                    Console.WriteLine("Particular Course Details : ");
                    Console.WriteLine("--------------------------");
                    Console.WriteLine("Course Id : " + " " + dr[0]);
                    Console.WriteLine("Course Name :" + " " + dr[1]);
                    Console.WriteLine("Course Duration :" + " " + dr[2]);
                    Console.WriteLine("Course Fees :" + " " + dr[3]);
                    Console.WriteLine();
                }
            }
            catch (SqlException se)
            {
                Console.WriteLine("Course Doesn't Exist...........!", se);
            }


        }


    }
}